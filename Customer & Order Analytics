--In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--1. How many orders were placed in January? 
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND orderdate LIKE '01%';

--2. How many of those orders were for an iPhone? 
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID'
AND orderdate LIKE '01%';

--3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON FebSales.orderID = customers.order_id
WHERE orderdate LIKE '02%'
AND orderID <> 'Order ID'
AND length(orderID) = 6;

--4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, price
FROM BIT_db.JanSales
WHERE orderdate LIKE '01%'
ORDER BY price ASC
LIMIT 1;

--5. What is the total revenue for each product sold in January?
SELECT SUM(quantity)*price AS Revenue, Product
FROM BIT_DB.JanSales
WHERE orderdate LIKE '01%'
GROUP BY Product;

--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, quantity, SUM(quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02%'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

--7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(acctnum), AVG(quantity*price) 
FROM BIT_DB.customers
LEFT JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderID
WHERE quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID'
AND orderdate LIKE '02%';

--8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE quantity <> 'Quantity Ordered'
AND orderdate LIKE '02%'
AND location LIKE '%Los Angeles%'
GROUP BY Product;

--Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT Location, COUNT(orderID) Orders
FROM BIT_DB.JanSales
WHERE Location LIKE '%NY%'
AND orderID <> 'Order ID'
AND length(orderID) = 6
AND orderdate LIKE '01%'
GROUP BY Location
HAVING Orders > 2;

--How many of each type of headphone were sold in February?
SELECT DISTINCT Product, SUM(Quantity) Sold
FROM BIT_DB.FebSales
WHERE Product LIKE '%eadph%'
AND orderdate LIKE '02%'
AND orderID <> 'Order ID'
AND length(orderID) = 6
GROUP BY Product;

--What was the average amount spent per account in February?
SELECT SUM(quantity*price)/COUNT(acctnum) AS 'Average per account'
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON orderID = order_id
WHERE orderdate LIKE '02%'
AND length(orderID) = 6
AND orderID <> 'Order ID';

--What was the average quantity of products purchased per account in February?
SELECT SUM(Quantity)/COUNT(acctnum) AS 'Average quantity per account'
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON orderID = order_ID
WHERE orderdate LIKE '02%'
AND orderID <> 'Order ID'
AND length(orderID) = 6;

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(Quantity*price) AS Revenue
FROM BIT_DB.JanSales
WHERE orderdate LIKE '01%'
AND orderID <> 'Order ID'
AND length(orderID) = 6
GROUP BY Product
ORDER BY Revenue DESC
LIMIT 1;
