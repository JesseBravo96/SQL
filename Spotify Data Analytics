--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);
--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL. 

--Who are the top 10 artists based on popularity?
SELECT artist_name Artist, popularity Popularity
FROM BIT_DB.Spotifydata
GROUP BY Artist
ORDER BY popularity DESC
LIMIT 10;

--What artist released the longest song?
SELECT artist_name Artist, track_name Track, duration_ms/1000 Seconds
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

--What is the average danceability by artist and track?
SELECT artist_name Artist, track_name Track, AVG(danceability) AS 'Danceability Average'
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY danceability DESC;

--How many times does each artist appear on the list?
SELECT COUNT(artist_name) Appearances, artist_name Artist
FROM BIT_DB.Spotifydata
GROUP BY Artist
ORDER BY Appearances DESC;

--What is the average length of the top 10 songs in popularity?
SELECT track_name Track, AVG(duration_ms/1000) AS 'Average Length', popularity Popularity
FROM BIT_DB.Spotifydata
GROUP BY Track
ORDER BY Popularity DESC
LIMIT 10;

--What is the average popularity for the artists? Those that are 90 and over in popularity should be labeled as "Top Star"
WITH Average_Popularity AS (
SELECT AVG(popularity) Avg_Popularity, artist_name Artist
FROM Spotifydata
GROUP BY Artist
)
SELECT Artist, Avg_Popularity AS 'Average Popularity', 'Top Star' AS tag
FROM Average_Popularity
WHERE Avg_Popularity >= 90
GROUP BY Artist
ORDER BY Avg_Popularity DESC;
